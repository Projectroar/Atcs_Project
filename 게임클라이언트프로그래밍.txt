8월 1일

데이터 타입
int(정수형)
float(실수형)
char(문자 하나 저장하는 데이터 타입) - C#은 유니코드사용
string(문자열)
bool(불리언)

배열 : 각 데이터타입과 조합해서 사용. 한 종류의 
데이터타입을 연속해서 저장하는 데이터타입(C#의 배열은 별도의 타입으로 분류)

접근제한자(Access Modifier)
- private : 자기 자신만 접근 가능(따로 설정하지 않을 경우 디폴트)
- public : 모두가 접근가능
- protected : 자신과 자신을 상속받은 클래스만 접근 가능

메모리 구조
- 힙(Heap) : 클래스의 객체가 저장되는 공간 = 참조타입이 저장된다 > 얕은 복사(깊은 복사도 가능은 하다)
힙은 운영체제가 메모리를 할당하는 메모리이다

- 스택(Stack) : struct의 객체가 저장되는 공간 = 값 타입이 저장된다 > 깊은 복사

가비지 콜렉션 
- 가비지 콜렉터 : 가비지를 수집하고 관리하는 프로세스

오브젝트 풀
-오브젝트를 미리 많이 생성해 놓고 재활용하는 방식

메모리 풀(Memory Pool)			
- 메모리를 한번에 크게 할당 받은 후 프로그램 실행도중에 메모리가 필요해지면 미리 
할당한 곳에서 넘겨받아 사용하는 방식
- 객체를 생성/삭제할 때는 힙에서 메모리를 
할당/해제 해야하는데 시간이 많이 걸리므로 하나의 큰 버퍼를 할당한 후 내부적으로 따로
관리하여 사용하는 것이 실시간 성능 향상에 도움이 된다
- 메모리 단편화 문제를 막는데도 도움이 된다

이벤트
- 프로그램에 의해 감지되고 처리될 수 있는 동작이나 사건
이벤트 드리븐(Event driven)
- 프로그램이 비동기적인 이벤트에 반응하여 동작을 변경하는 프로그래밍 패러다임

예외(Exception)
- 프로그램이 어떻게 처리할지 정의되지 않은 경우

- NullRefferenceException : null을 참조한 경우
- IndexOutOfRangeException : 배열 범위를 벗어난 경우

피킹
- 마우스를 이용해 화면의 특정 지점에 있는 오브젝트를 찾아내는 것
- 카메라 위치에서 near plane의 마우스 위치로 나가는 레이를 구성한 후 레이케스트를 이용해
레이에 닿는 오브젝트가 있는지 검사하는 것

Raycast(레이케스트)
- 특정Ray(원점,방향을 가지는 선)와 충돌하는 오브젝트가 있는지 확인하는 방법

유니티
- Scene : 맵하나의 단위
- GameObject : Scene을 구성하는 최소 단위
- Component : GameObject를 구성하는 기능의 최소 단위

GameObject 탐색법
- Find계열의 함수
* 이름
* 태그
* 타입

- Component탐색법
* GetComponent  
* GetComponents
* GetComponentInChildren
* GetComponentsInChildren

높이맵(Height Map)
- Terrain
- 거대 지형 생성용
- 텍스쳐의 픽셀 하나와 생성할 정점 하나를 매칭 시킴
- 픽셀의 x위치값은 생성된 정점의 x위치
- 픽셀의 y위치값은 생성된 정점의 z위치 
- 픽셀의 생상값은 점의 y위치
- 장점 : 적은 메모리로 넓은 지형 표현 가능
- 단점 : 지형 구조가 단조롭다 (동굴,절벽,급경사,구멍이 표현이 안됨) 





















